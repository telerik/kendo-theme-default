@include exports( "common/layout" ) {

    // Layout
    .k-reset {
        margin: 0;
        padding: 0;
        border-width: 0;
        outline: 0;
        text-decoration: none;
        font: inherit;
        list-style: none;
    }


    // Layout
    .k-widget {
        border-width: 1px;
        border-style: solid;
        box-sizing: border-box;
        outline: 0;
        font-size: $font-size;
        line-height: $line-height;
        display: block;
        -webkit-touch-callout: none;
        -webkit-tap-highlight-color: $rgba-transparent;

        &:disabled,
        &[disabled] {
            @include disabled;
        }

        @include compact {
            font-size: $font-size-sm;
        }
    }
    table.k-widget { display: table; }


    // Overlay
    .k-overlay {
        width: 100%;
        height: 100%;
        background-color: #000000;
        opacity: .5;
        position: fixed;
        top: 0;
        left: 0;
        z-index: 10001;
    }


    // RTL
    .k-rtl {
        direction: rtl;
    }


    // Float wrap
    .k-floatwrap::after,
    .k-grid-toolbar::after,
    .k-slider-items::after {
        content: "";
        display: block;
        clear: both;
    }


    // Links
    .k-link,
    .k-link:hover {
        color: inherit;
        text-decoration: none;
    }

    // Outline
    .k-content {
        outline: 0;
    }


    // Box sizing
    .k-block {
        box-sizing: border-box;
    }


    // Centering
    .k-centered {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }


    // Off-screen container used during PDF export
    .k-pdf-export-shadow {
        position: absolute;
        overflow: hidden;
        left: -15000px;
        width: 14400px;
    }


    // Flipping
    .k-flip-h { transform: scaleX(-1); }
    .k-flip-v { transform: scaleY(-1); }
    .k-flip-h.k-flip-v { transform: scale(-1, -1); }

}


// virtual scrollbar
.k-scrollbar {
    position: absolute;
    overflow: scroll;
}

.k-scrollbar-vertical {
    top: 0;
    right: 0;
    width: 17px; /* scrollbar width */
    height: 100%;
    overflow-x: hidden;
}

.k-touch-scrollbar {
    display: none;
    position: absolute;
    z-index: 200000;
    height: 8px;
    width: 8px;
    border: 1px solid #8a8a8a;
    background-color: #858585;
}

@include exports( "common/theme" ) {

    // Widget
    .k-widget {
        @include appearance( widget );
    }


    // Panels
    .k-content {
        @include appearance( panel );
    }


    // Header
    .k-header {
        // @include appearance( header );
    }
    .k-header.k-state-hover {
        // @include appearance( hovered-header );
    }
    .k-header.k-state-selected {
        // @include appearance( selected-header );
    }


    // Link
    .k-link,
    .k-link:hover {
        // color: $base-text;
    }


    // Hover state
    .k-state-hover,
    .k-state-hover:hover {
        // background-color: $hovered-bg;
        // border-color: $hovered-border;
        // color: $hovered-text;
    }


    // Selected state
    .k-state-selected {
        color: $selected-text;
        background-color: $selected-bg;
        border-color: $selected-border;
    }


    // TODO: focused state
    // Focused focused state
    .k-state-focused {
        // box-shadow: $focused-item-shadow;
    }


    // TODO: what is highlight state?
    // Highlight state
    .k-state-highlight {
        // background-color: saturate($base-bg, 4%);
        // border-color: $accent;
    }


    // TODO: what is active state?
    // Active state
    .k-state-active {
        // background-color: $widget-bg;
    }


    // Disabled state
    .k-disabled,
    .k-state-disabled {
        @include disabled;


        .k-link,
        .k-button {
            cursor: default;
            outline: 0;
        }


        // Nested disabled
        [disabled],
        .k-disabled,
        .k-state-disabled {
            opacity: 1;
            filter: grayscale(0);
        }
    }


    // Error-state
    .k-state-error {
        border-style: ridge;
    }


    // TODO: what is smpty state?
    // Empty state
    .k-state-empty {
        font-style: italic;
    }

}


@include exports( "common/resize" ) {

    // Resize handle
    .k-resize-handle,
    .k-resize-hint {
        position: absolute;
        border-color: inherit;
    }
    .k-resize-handle {
        display: flex;
        align-items: center;
        justify-content: center;
    }
    .k-resize-handle::before {
        content: "";
        border: 0 solid;
        border-color: inherit;
    }
    .k-resize-n {
        width: 100%;
        height: 6px;
        flex-direction: row;
        left: 0;
        top: -3px;
        cursor: n-resize;
    }
    .k-resize-s {
        width: 100%;
        height: 6px;
        flex-direction: row;
        left: 0;
        bottom: -3px;
        cursor: s-resize;
    }
    .k-resize-w {
        width: 6px;
        height: 100%;
        flex-direction: col;
        top: 0;
        left: -3px;
        cursor: w-resize;
    }
    .k-resize-e {
        width: 6px;
        height: 100%;
        flex-direction: col;
        top: 0;
        right: -3px;
        cursor: w-resize;
    }

}


@include exports( "common/lines" ) {

    // Lines
    .k-line {
        background-color: currentColor;
        border-color: currentColor;
    }
    .k-line-h,
    .k-line-v {
        position: absolute;
    }
    .k-line-h { height: 2px; }
    .k-line-v { width: 2px; }


    // Arrows
    .k-arrow-e,
    .k-arrow-w {
        width: 0;
        height: 0;
        border: 5px solid transparent;
        position: absolute;
        top: -4px;
    }
    .k-arrow-e {
        border-left-color: currentColor;
        right: -6px;
    }
    .k-arrow-w {
        border-right-color: currentColor;
        left: -6px;
    }

}


@include exports( "common/marquee" ) {

    .k-marquee {
        position: absolute;
        z-index: 100000;
    }
    .k-marquee-color,
    .k-marquee-text {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }
    .k-marquee-color {
        color: $selected-text;
        background-color: $selected-bg;
        border-color: $selected-border;
        opacity: .6;
    }
    .k-marquee-text {
        color: $selected-text;
    }

}


@include exports( "common/loading" ) {

    // Loading indicator
    .k-loading {
        width: 64px;
        height: 64px;
        display: block;

        .animate {
            animation: loading 2s infinite linear;
        }
    }

    @keyframes loading {
        0% {
            stroke-dasharray: 0 251;
            stroke-dashoffset: 502;
        }

        50% {
            stroke-dasharray: 250 1;
        }

        100% {
            stroke-dasharray: 0 251;
            stroke-dashoffset: 0;
        }
    }


    // Loading mask
    .k-loading-mask,
    .k-loading-image,
    .k-loading-color {
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
    }

    .k-loading-mask {
        z-index: 100;
    }
    .k-loading-text {
        text-indent: -4000px;
        text-align: center;
        position: absolute;
    }
    .k-loading-image {
        z-index: 2;
    }
    .k-loading-color {
        background-color: $widget-bg;
        opacity: .3;
    }

    $loading-stroke-width: 2px !default;
    $loading-size: $icon-size - $loading-stroke-width !default;
    $loading-speed: 2s !default;
    $loading-color: $accent;
    $loading-outer-size: ($loading-size + ($loading-stroke-width * 2));
    $loading-half-size: ($loading-outer-size / 2) !default;

    .k-icon.k-i-loading {
        position: relative;
        width: $loading-size;
        height: $loading-size;
        border: 2px solid $bg-color;
        box-shadow: inset 0 0 0 $loading-stroke-width $loading-color;
        border-radius: 50%;
        box-sizing: content-box;

        &::before,
        &::after {
            content: "";
        }
    }

    .k-i-loading::before,
    .k-i-loading::after {
        position: absolute;
        width:  $loading-half-size;
        height: $loading-outer-size;
        background: $bg-color;
    }
    .k-i-loading::before {
        border-radius: $loading-outer-size 0 0 $loading-outer-size;
        top: -($loading-stroke-width);
        left: -($loading-stroke-width);
        transform-origin: $loading-half-size $loading-half-size;
        animation: k-loading-animation $loading-speed infinite ease 1.5s;
    }
    .k-i-loading::after {
        border-radius: 0 $loading-outer-size $loading-outer-size 0;
        top: -($loading-stroke-width);
        left: ($loading-size / 2);
        transform-origin: 0 $loading-half-size;
        animation: k-loading-animation $loading-speed infinite ease;
    }

    @keyframes k-loading-animation {
        0% {
            transform: rotate(0deg);
        }
        100% {
            transform: rotate(360deg);
        }
    }

}


@include exports( "common/dragclue" ) {

    // Layout
    .k-drag-clue {
        padding: $padding-y-sm $padding-x-sm;
        border-width: 1px;
        border-style: solid;
        font-size: $font-size-sm;
        white-space: nowrap;
        overflow: hidden;
        cursor: default;
    }
    .k-drag-status {
        margin-right: .4ex;
    }


    // Theme
    .k-drag-clue {
        @include appearance( selected-node );
    }

}


@include exports("edit-form/layout") {


    // Edit form
    .k-popup-edit-form {}
    .k-edit-form-container {
        width: 400px;
        border-color: inherit;
        position: relative;
    }


    // Tabstrip
    .k-edit-form-container .k-tabstrip {
        margin: (-$window-inner-padding-y) (-$window-inner-padding-x);
    }
    .k-edit-form-container .k-tabstrip .k-tabstrip-items {
        padding: $window-inner-padding-y $window-inner-padding-x 0;
    }
    .k-edit-form-container .k-tabstrip .k-content {
        padding: $window-inner-padding-y $window-inner-padding-x;
        border-width: 0;
    }


    // Buttons
    .k-edit-buttons {
        padding: $toolbar-padding-y $toolbar-padding-x;
        border-width: 1px 0 0;
        border-style: solid;
        border-color: inherit;
        text-align: right;
        clear: both;
    }
    .k-edit-buttons .k-button {}
    .k-edit-buttons .k-button + .k-button {
        margin-left: ( $spacer-x / 2 );
    }
    .k-edit-form-container .k-edit-buttons {
        margin: $spacer (-$window-inner-padding-x) (-$window-inner-padding-y);
        padding: $window-inner-padding-y $window-inner-padding-x;
    }


    .k-edit-label {
        padding: 0 0 $spacer-y 0;
        width: 30%;
        text-align: right;
        float: left;
        clear: both;
    }
    .k-edit-field {
        padding: 0 0 $spacer-y 0;
        width: 60%;
        float: right;
        clear: right;
    }

    .k-edit-field {

        > .k-widget,
        > .k-textbox,
        > .k-input.k-textbox {
            width: 100%;
            box-sizing: border-box;
        }

        .k-radio,
        .k-checkbox {
            margin-left: 1px;
            margin-top: .7em;
            width: 14px;
            height: 15px;
            z-index: 1;
        }
        [type="radio"] {
            margin-right: .4ex;
        }

        .k-radio-label,
        .k-checkbox-label {
            margin-top: ($spacer / 2);
            margin-right: ($spacer);
            cursor: default;
        }

        .k-reset > li + li {
            margin-top: ($spacer / 2);
        }
        .k-reset .k-widget {
            margin: 0 .4ex 0 1ex;
        }
    }

}