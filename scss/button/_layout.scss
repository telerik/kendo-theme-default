@include exports('button/layout') {

    // Button
    .k-button {
        @include border-radius( $border-radius );
        padding: $button-padding-y $button-padding-x;
        box-sizing: border-box;
        border-width: 1px;
        border-style: solid;
        font-size: $font-size;
        line-height: $form-line-height;
        text-align: center;
        text-decoration: none;
        white-space: nowrap;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        vertical-align: middle;
        user-select: none;
        cursor: pointer;
        outline: none;
        -webkit-appearance: none;

        // TODO: extend disabled selector
        &[disabled],
        &.k-state-disabled:hover,
        &.k-state-disabled:focus,
        [disabled] & {
            @extend %disabled;
        }

        &::-moz-focus-inner {
            padding: 0;
            border: 0;
            outline: 0;
        }

        &:hover,
        &:focus {
            text-decoration: none;
            outline: 0;
        }

        .k-icon,
        .k-image,
        .k-sprite {
            color: inherit;
            align-self: center;
        }


        // Button variants
        &-icontext {
            overflow: visible; // IE9

            .k-icon,
            .k-image,
            .k-sprite {
                margin: 0 ($button-padding-x / 2) 0 (-$button-padding-x / 2);

            }

            &[dir='rtl'] {
                .k-icon,
                .k-image,
                .k-sprite {
                    margin: 0 (-$button-padding-x / 2) 0 ($button-padding-x / 2);
                }
            }
        }
        &-icon {
            width: button-size();
            height: button-size();
            padding: $button-padding-y;
        }




        // Compact
        @include compact {
            padding: $button-padding-y-sm $button-padding-x-sm;
            font-size: $font-size-sm;

            &-icontext {
                .k-icon {
                    margin: 0 ($button-padding-x-sm / 2) 0 (-$button-padding-x-sm / 2);
                }
            }
            &-icon {
                padding: $button-padding-y-sm;
            }
        }

    }


    // Toggle button
    .k-toggle-button {}


    // Split button
    .k-split-button {
        .k-button {
            @include border-radius( $border-radius 0 0 $border-radius );
        }
        .k-split-button-arrow {
            @include border-radius( 0 $border-radius $border-radius 0 );
            margin-left: -1px;
            padding: $button-padding-y;
        }


        @include compact {
            .k-split-button-arrow {
                padding: $button-padding-y-sm;
            }
        }

        .k-widget {
            border: 0;
        }
    }


    //DropDown Button
    .k-dropdown-button {
        &.k-state-focused,
        &:focus {
            outline: 0;
        }

        &.k-widget {
            border-width: 0;
            display: inline-block;
        }
    }


    // Button group
    .k-button-group {
        margin: 0;
        padding: 0;
        list-style: none;
        white-space: nowrap;
        display: inline-flex;
        flex-direction: row;
        vertical-align: middle;
        position: relative;

        .k-button {
            position: relative;
            border-radius: 0;
        }
        .k-button + .k-button {
            margin-left: -1px;
        }

        .k-button:hover,
        .k-button.k-state-hover,
        .k-button.k-state-active {
            z-index: 2;
        }

        .k-group-start,
        .k-button:first-child {
            @include border-radius( $border-radius 0 0 $border-radius );
        }
        .k-group-end,
        .k-button:last-child {
            @include border-radius( 0 $border-radius $border-radius 0 );
        }
        .k-group-start.k-group-end,
        .k-button:first-child:last-child {
            @include border-radius( $border-radius );
        }

    }

    .k-button-group-stretched {
        display: flex;

        > .k-button {
            display: inline-block;
            flex: 1 1 0;
            overflow: hidden;
            text-overflow: ellipsis;

            > .k-icon {
                vertical-align: text-bottom;
            }
        }
    }


    //SplitButton
    .k-split-button.k-button-group.k-state-focused {
        border-radius: $border-radius;
    }

    .k-split-button.k-widget {
        border-width: 0;
    }

    .k-split-button.k-button-group .k-button {
        &:first-child {
            border-top-left-radius: $border-radius;
            border-bottom-left-radius: $border-radius;
        }

        &:nth-child(2) {
            border-top-right-radius: $border-radius;
            border-bottom-right-radius: $border-radius;
        }
    }


    // Flat button
    .k-button.k-flat {
        border-color: transparent;
        color: inherit;
        background-color: transparent;
        background-image: none;
        box-shadow: none;
    }


    // Outline button
    .k-button.k-outline {
        // sass-lint:disable no-important
        border-width: 0 !important;
        color: inherit;
        background: none !important;
        box-shadow: none !important;
        // sass-lint:enable no-important
    }


    // Bare button
    .k-button.k-bare {
        // sass-lint:disable no-important
        border-color: transparent !important;
        color: inherit;
        background: none !important;
        box-shadow: none !important;
        position: relative;
        transition: color .2s ease-in-out;
        // sass-lint:enable no-important

        &::before {
            content: "";
            background-color: currentColor;
            display: block;
            opacity: 0;
            transition: opacity .2s ease-in-out;
            pointer-events: none;
            position: absolute;
            z-index: 0;
            top: -1px;
            left: -1px;
            right: -1px;
            bottom: -1px;
        }
        &::after {
            content: "";
            border: 2px solid currentColor;
            display: block;
            opacity: 0;
            pointer-events: none;
            position: absolute;
            z-index: 0;
            top: -1px;
            left: -1px;
            right: -1px;
            bottom: -1px;
        }

        // Hover state
        &:hover,
        &.k-state-hover {
            color: inherit;

            &::before {
                opacity: .07;
                z-index: initial;
            }
        }

        // Pressed state
        &:active,
        &.k-state-active {
            color: inherit;

            &::before {
                opacity: .08;
            }

            &::after {
                opacity: .13;
            }

            &::before,
            &::after {
                z-index: initial;
            }
        }

        // Focused state
        &:focus,
        &.k-state-focused {
            color: inherit;

            &::after { opacity: .13; }
        }

    }

}